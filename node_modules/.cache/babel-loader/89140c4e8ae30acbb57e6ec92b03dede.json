{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\project\\\\ManualPerdido\\\\ManualPerdidoFront\\\\src\\\\components\\\\python_code.js\";\nimport React, { Component } from \"react\";\n\nconst {\n  spawn\n} = require('child_process');\n\nexport default class PythonCode extends Component {\n  constructor(props) {\n    super(props); //this.onChangeTitle = this.onChangeTitle.bind(this);\n    //this.onChangeDescription = this.onChangeDescription.bind(this);\n    //this.saveTutorial = this.saveTutorial.bind(this);\n    //this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n      submitted: false\n    };\n  }\n\n  saveTutorial() {\n    var dataToSend; // spawn new child process to call the python script\n\n    const python = spawn('python', ['ythonCode.py']); // collect data from script/\n\n    python.stdout.on('data', function (data) {\n      console.log('Pipe data from python script ...');\n      dataToSend = data.toString();\n      console.log(dataToSend);\n    }); // in close event we are sure that stream from child process is closed\n\n    python.on('close', code => {\n      console.log(`child process close all stdio with code ${code}`); // send data to browser\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"submit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.saveTutorial,\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Execute PythonCode\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/USER/Documents/project/ManualPerdido/ManualPerdidoFront/src/components/python_code.js"],"names":["React","Component","spawn","require","PythonCode","constructor","props","state","id","title","description","published","submitted","saveTutorial","dataToSend","python","stdout","on","data","console","log","toString","code","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAUC,OAAO,CAAC,eAAD,CAAvB;;AACA,eAAe,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAChDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;AACA;AACA;AACA;;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,IADO;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,SAAS,EAAE,KAJA;AAMXC,MAAAA,SAAS,EAAE;AANA,KAAb;AAQD;;AAGDC,EAAAA,YAAY,GAAG;AAGX,QAAIC,UAAJ,CAHW,CAIX;;AACA,UAAMC,MAAM,GAAGb,KAAK,CAAC,QAAD,EAAW,CAAC,cAAD,CAAX,CAApB,CALW,CAMX;;AACAa,IAAAA,MAAM,CAACC,MAAP,CAAcC,EAAd,CAAiB,MAAjB,EAAyB,UAAUC,IAAV,EAAgB;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAN,MAAAA,UAAU,GAAGI,IAAI,CAACG,QAAL,EAAb;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACA,KAJD,EAPW,CAYX;;AACAC,IAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAoBK,IAAD,IAAU;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAa,2CAA0CE,IAAK,EAA5D,EAD6B,CAE7B;AAGA,KALA;AAMH;;AAGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEM;AAAQ,MAAA,OAAO,EAAE,KAAKV,YAAtB;AAAoC,MAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFN,CADF;AAQD;;AAlD+C","sourcesContent":["import React, { Component } from \"react\";\r\nconst {spawn} = require('child_process');\r\nexport default class PythonCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    //this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    //this.saveTutorial = this.saveTutorial.bind(this);\r\n    //this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      title: \"\",\r\n      description: \"\", \r\n      published: false,\r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n\r\n  saveTutorial() {\r\n \r\n \r\n      var dataToSend;\r\n      // spawn new child process to call the python script\r\n      const python = spawn('python', ['ythonCode.py']);\r\n      // collect data from script/\r\n      python.stdout.on('data', function (data) {\r\n       console.log('Pipe data from python script ...');\r\n       dataToSend = data.toString();\r\n       console.log(dataToSend);\r\n      });\r\n      // in close event we are sure that stream from child process is closed\r\n      python.on('close', (code) => {\r\n      console.log(`child process close all stdio with code ${code}`);\r\n      // send data to browser\r\n\r\n      \r\n     })\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n      \r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n            Execute PythonCode\r\n            </button>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}